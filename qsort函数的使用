#include<stdio.h>
#include<stdlib.h>
#include<string.h>
struct Stu
{
    char name[10];
    int age;
};
int cmp_stu_by_age(const void* e1, const void* e2)
{
    //比较年龄
    return ((struct Stu*)e1)->age - ((struct Stu*)e2)->age;
}
int cmp_stu_by_name(const void* e1, const void* e2)
{
    //比较姓名就是比较字符串
    //字符串比较不能直接用< > = 来比较，应该用strcmp函数
    return strcmp(((struct Stu*)e1)->name - ((struct Stu*)e2)->name);

}
int main()
{
    struct Stu s[3] = { {"zhangshan",20},{"lisi",30},{"wangwu",25} };
    int sz = sizeof(s) / sizeof(s[0]);
    //依次是
    //base-- 指向要排序的数组的第一个元素的指针。
    //nitems-- 由 base 指向的数组中元素的个数。
    //size-- 数组中每个元素的大小，以字节为单位。
    //compar-- 用来比较两个元素的函数，即函数指针（回调函数)返回值为  >0 0 <0
    qsort(s, sz, sizeof(s[0]), cmp_stu_by_age);
    printf("%d", s->age);
    printf("%d", s[1].age);
    printf("%d", (*s).age);
    return 0;
}
